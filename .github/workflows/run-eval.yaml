name: Run API Evaluation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run-api-eval:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml

      - name: Install dependencies
        run: |
          bin/api/prepare.sh

      - name: Run API Evaluation Script
        env:
          MODEL_NAME: lfm-3b
          MODEL_URL: ${{ vars.MODEL_URL }}
          MODEL_API_KEY: ${{ secrets.MODEL_API_KEY }}
        run: |
          bin/api/run_api_eval.sh \
            --model-name "$MODEL_NAME" \
            --model-url "$MODEL_URL" \
            --model-api-key "$MODEL_API_KEY" \
            --num-choices 1 \
            --question-count 1

      - name: Process Model Answers
        run: |
          OUTPUT_FILE=$(ls -t llm_judge/data/japanese_mt_bench/model_answer/*.jsonl | head -n 1)
          if [ -f "$OUTPUT_FILE" ]; then
            echo "Output JSON file: $OUTPUT_FILE"
            # Print to console with jq
            cat "$OUTPUT_FILE" | jq

            # Write to workflow summary
            echo "# Model Answers" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Output file: \`$OUTPUT_FILE\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat "$OUTPUT_FILE" | jq . >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "No output file found in the directory."
            exit 1
          fi

      - name: Run OpenAI Judge
        env:
          MODEL_NAME: lfm-3b
          MODEL_URL: ${{ vars.MODEL_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          bin/api/run_openai_judge.sh \
            --model-name "$MODEL_NAME" \
            --openai-api-key "$OPENAI_API_KEY" \
            --parallel 3

      - name: Process Judge Results
        run: |
          OUTPUT_FILE=$(ls -t llm_judge/data/japanese_mt_bench/model_judgment/*.jsonl | head -n 1)
          if [ -f "$OUTPUT_FILE" ]; then
            echo "Output JSON file: $OUTPUT_FILE"
            # Print to console with jq
            cat "$OUTPUT_FILE" | jq

            # Write to workflow summary
            echo "# Judge Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Output file: \`$OUTPUT_FILE\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat "$OUTPUT_FILE" | jq . >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "No output file found in the directory."
            exit 1
          fi
